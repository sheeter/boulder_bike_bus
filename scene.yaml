import:
    # - https://raw.githubusercontent.com/sensescape/xyz-studio-dark/master/scene.yaml
    # - https://raw.githubusercontent.com/sensescape/xyz-pixel-dark/master/scene.yaml
    - https://raw.githubusercontent.com/sensescape/xyz-pixel/master/scene.yaml
    # - https://www.nextzen.org/carto/walkabout-style/walkabout-style.zip
    # - https://raw.githubusercontent.com/sensescape/xyz-pixel-pastel/master/scene.yaml
    # - https://www.nextzen.org/carto/refill-style/refill-style.zip
    # - https://www.nextzen.org/carto/refill-style/themes/color-gray-gold.zip
    # # - https://www.nextzen.org/carto/refill-style/themes/color-inverted.zip
    # - https://s3.amazonaws.com/xyz-demo/data/demo.yaml
    # - https://www.nextzen.org/carto/refill-style/11/themes/label-4.zip
    # # - https://www.nextzen.org/carto/refill-style/themes/terrain-shading.zip
    # - https://www.nextzen.org/carto/refill-style/11/themes/terrain-shading-dark.zip

global:
    token: FTYsIM6IQpC4nFOM2S6LpQ
    block_line: 50
    block: 49
    point_zoom: 14
    titlecase: |
        function toTitleCase(str) {
          return str.replace(
            /\w\S*/g,
            function(txt) {
              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
            }
          );
        }

sources:
    mapzen:
        type: MVT
        url: https://tile.nextzen.org/tilezen/vector/v1/all/{z}/{x}/{y}.mvt
        url_params: 
            api_key: global.token
            
            

    _routes:
        type: GeoJSON
        url: https://raw.githubusercontent.com/sheeter/boulder_bike_bus/main/routes.geojson
    _schools:
        type: GeoJSON
        url: https://raw.githubusercontent.com/sheeter/boulder_bike_bus/main/schools.geojson
    _satellite:
        # url: https://1.aerial.maps.api.here.com/maptile/2.1/maptile/newest/terrain.day/{z}/{x}/{y}/512/png
        # url: https://api.maptiler.com/tiles/satellite-v2/{z}/{x}/{y}.jpg?key=wTkSyYFwAJ31EaUeDbXl
        url: https://api.maptiler.com/tiles/satellite-v2/{z}/{x}/{y}.jpg
        type: Raster
        utl_params: 
            key: GqZWha4PKN6pK6IEijud
        # rasters: [terrain_normals]
        # url_params:
        #     app_id: 0VeWPmMuUeMebnjNVGz9
        #     app_code: MVqjbI661R5lC2DqkAZpNg
styles:
    _polygons:
        base: polygons
        blend: inlay
        blend_order: 0
    _points:
        base: points
        blend: overlay
        blend_order: 1
    _text:
        base: text
        blend: overlay
        blend_order: 11
    _lines:
        base: lines
        blend: inlay
        blend_order: 0
    _lines_low:
        base: lines
        blend: inlay
        blend_order: -2
    _polygons_inlay:
        base: polygons
        blend: inlay
        blend_order: 0
    _polygons_overlay:
        base: polygons
        blend: overlay
        blend_order: 1
    _ants:
        base: lines
        blend: inlay
        blend_order: 0
        texcoords: true
        animated: true
        shaders:
            blocks:
                color: |
                    color.a = step(.2,fract(u_time-v_texcoord.y*.45));
 
    _arrows:
        base: lines
        blend: overlay
        texcoords: true
        animated: true
        texture: https://burritojustice.github.io/valencia_bikeway/images/bus.png
        shaders:
            global:
                float shape(vec2 st, int N){
                    st = st *2.-1.;
                    float a = atan(st.x,st.y)+PI;
                    float r = TWO_PI/float(N);
                    return cos(floor(.5+a/r)*r-a)*length(st);
                }
            blocks:
                color: |
                    color.a = step(.5,fract(u_time-v_texcoord.y*.5));
                    

layers:
    
    # places:
    #     enabled: false
    # buildings:
    #     enabled: false
    
    _schools:
        data: {source: _schools}
        filter: {not: {visible: hide}}
        draw:
            points:
                collide: false
                color: |
                    function(){
                        var color = 'red'
                        if (feature.type.includes("pre")){
                            color = 'white'
                            }
                        if (feature.type == 'elementary'){
                            color = 'yellow'
                            }
                        if (feature.type == 'middle'){
                            color = 'orange'
                            }
                        return color
                        }
                # color: red
                size: 10px
                order: 1000
                outline:
                    # color: |
                    #     function(){
                    #         var color = 'black'
                    #         if (feature.jurisdiction == 'private'){
                    #             color = 'aqua'
                    #             }
                    #         return color
                    #         }
                    color: black
                    width: 1.5px

                text:
                    optional: true
                    # collide: true
                    text_source: school_name
                    font:
                        fill: white
                        size: [[18,12px],[19,16px]]
                        stroke:
                            color: black
                            width: 3px


    _routes:
        # enabled: false
        data: {source: _routes}
        draw:
            _ants: 
                color: |
                    function(){
                        return feature.stroke
                        }
                # color: black
                width: [[14,2px],[18,8px]]
                order: 1000
            _lines: 
                color: white
                width: [[14,3px],[18,10px]]
                order: 1000

        labels:
            filter: {$zoom: {min: 14}}
            
            draw:
                text:
                    # optional: true
                    # text_source: name
                    text_wrap: true
                    font:
                        fill: black
                        size: [[18,12px],[19,16px]]
                        stroke:
                            color: white
                            width: 3px 
                
        _primary_ants:
            filter: {01type: primary}
            draw:
                _ants:
                    color: function(){return feature.stroke}
                    width: [[14,2px],[18,8px]]
                    order: 1001
                _lines: 
                    color: white
                    width: [[14,2px],[18,8px]]
                    order: 1001
        
        _meetups:
            filter: {01type: marker}
            draw:
                _points:
                    color: lightgreen
                    size: 12px
                    order: 2000
                    outline:
                        color: black
                        width: 2px

                    text:
                        # optional: true
                        text_source: | 
                            function(){
                                var name = feature.name || ''
                                var emoji = feature.emoji || ''
                                var time = feature.time || ''
                                return name + '\n' + emoji + ' ' +  time}
                        anchor: bottom
                        font:
                            fill: black
                            size: [[18,12px],[19,16px]]
                            stroke:
                                color: white
                                width: 3px 

  


#     _satellite:
#         data: {source: _satellite}
#         draw:
#             raster:
#                 order: 999 # draw on bottom
